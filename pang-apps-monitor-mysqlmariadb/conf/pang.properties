#Prever.io reserved properties
pang.username=your username in prever.io
pang.userkey=your userkey in prever.io
# Data sending schedule period(seconds)
pang.period = 10
pang.prefix = 

#Don't worry. We do not send any information about connection properties
jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost
jdbc.username=username
jdbc.password=password

######################################################################
#Declare Status fields what you want to monitor
#You can find out more status variables at http://dev.mysql.com/doc/refman/5.7/en/server-status-variables.html
#More helpful document at http://www.trafficg.com/mysql/1.htm

#If MySQL is frequently accessing the first row of a table index, it suggests that it is performing a sequential scan of the entire index. This indicates that the corresponding table is not properly indexed.
status.Handler_read_first = false
#If this variable is high, it suggests that MySQL's memory buffer is incorrectly configured for the amount of writes the server is currently performing.
status.Innodb_buffer_pool_wait_free = false
#It provides real-time information on how many clients are currently connected to the server. This can help in traffic analysis or in deciding the best time for a server re-start.
status.Threads_connected = true
#This value provides a benchmark to help you decide the maximum number of connections your server should support. It can also help in traffic analysis.
status.Max_used_connections = true
status.Cpu_time = true
status.Queries = true
status.Memory_used = false
status.Innodb_deadlocks = false
# Performing filesystem reads for database indexes slows query performance. If this variable is high, it indicates that MySQL's key cache is overloaded and should be reconfigured.
status.Key_reads = false
#A high value indicates that many queries are not being optimally executed. A necessary next step would be to examine the slow query log and identify these slow queries for optimization.
status.Slow_queries = false
#A high value indicates that many queries are not being optimally executed. A necessary next step would be to examine the slow query log and identify these slow queries for optimization.
status.Select_full_join = false

######################################################################
#Below fields are not STATUS's variables. These fields are generated by calculation.
status.queries_per_second = true
#Unit: kb
status.traffic_in = true
#Unit: kb
status.traffic_out = true
#Unit: %
status.buffer_usage = true
#Innodb writes per second
status.writes_per_second = true
#Innodb reads per second
status.reads_per_second = true